stages:
  - stage: validate
    displayName: 'Validation'
    dependsOn: []
    jobs:
      - job: 'Windows'
        pool:
          vmImage: 'windows-latest'

        steps:
          - checkout: self
            clean: true
            persistCredentials: true

          - task: provisionator@2
            displayName: Provision Dependencies
            inputs:
              github_token: $(GitHub.Token)
              provisioning_script: $(System.DefaultWorkingDirectory)/bot-provisioning/dependencies.csx
              provisioning_extra_args: -vv DEVDIV_PKGS_NUGET_TOKEN=$(DevDiv.NuGet.Token) SECTOOLS_PKGS_NUGET_TOKEN=$(SecTools.NuGet.Token)

          - task: MSBuild@1
            displayName: Build
            inputs:
              solution: build.proj
              msbuildVersion: "15.0"
              msbuildArguments: '/restore /p:Release=true /t:Build'

          - task: MSBuild@1
            displayName: 'Run Tests'
            inputs:
              solution: build.proj
              msbuildVersion: "15.0"
              msbuildArguments: '/p:Release=true /t:Test'

          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFormat: NUnit
              testResultsFiles: '**/TestResult.xml'
            condition: succeededOrFailed()

      - job: 'MacOS'
        pool:
          vmImage: 'macos-12'

        steps:
          - checkout: self
            clean: true
            persistCredentials: true

          - task: NuGetAuthenticate@0

          - task: provisionator@2
            displayName: Provision Dependencies
            inputs:
              github_token: $(GitHub.Token)
              provisioning_script: $(System.DefaultWorkingDirectory)/bot-provisioning/dependencies.csx
              provisioning_extra_args: -vv DEVDIV_PKGS_NUGET_TOKEN=$(DevDiv.NuGet.Token) SECTOOLS_PKGS_NUGET_TOKEN=$(SecTools.NuGet.Token)

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              projects: build.proj
              command: build
              arguments: '/restore /p:Release=true /t:Build'

          - task: DotNetCoreCLI@2
            displayName: 'Run Tests'
            inputs:
              projects: build.proj
              command: build
              arguments: '/p:Release=true /t:Test'

          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFormat: NUnit
              testResultsFiles: '**/*.Tests.xml'
            condition: succeededOrFailed()
