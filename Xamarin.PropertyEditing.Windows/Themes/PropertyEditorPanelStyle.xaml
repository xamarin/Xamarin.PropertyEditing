<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Xamarin.PropertyEditing.Windows"
                    xmlns:core="clr-namespace:Xamarin.PropertyEditing;assembly=Xamarin.PropertyEditing"
                    xmlns:prop="clr-namespace:Xamarin.PropertyEditing.Properties;assembly=Xamarin.PropertyEditing"
                    xmlns:vms="clr-namespace:Xamarin.PropertyEditing.ViewModels;assembly=Xamarin.PropertyEditing">

	<BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<local:OppositeBoolConverter x:Key="OppositeBoolConverter" />
	<local:EditorPropertySelector x:Key="PropertyEditorSelector" />
	<local:EditorTreeSelector x:Key="EditorTreeSelector">
		<local:EditorTreeSelector.Options>
			<local:EditorTreeSelectorOptions ParentTemplate="{DynamicResource PropertyGroupTemplate}" EditorTemplate="{DynamicResource PropertyEditorTemplate}" />
		</local:EditorTreeSelector.Options>
	</local:EditorTreeSelector>

	<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="19" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						
						<Border Grid.Column="0" Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
							<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{DynamicResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{DynamicResource TreeViewItem.TreeArrow.Static.Stroke}">
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
								</Path.RenderTransform>
							</Path>
						</Border>
						
						<ContentPresenter Grid.Column="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
							<Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
							<Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TreeExpanderStyle" TargetType="Expander">
		<Setter Property="Foreground" Value="{DynamicResource PanelGroupForegroundBrush}" />
		<Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{DynamicResource CategoryExpanderBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpandCollapseToggleStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="PropertyEditorTemplate">
		<local:PropertyPresenter Padding="19,0,0,0" Background="{DynamicResource PanelBackgroundBrush}" Label="{Binding Property.Name,Mode=OneTime}" Content="{Binding Mode=OneTime}" ContentTemplateSelector="{StaticResource PropertyEditorSelector}" />
	</DataTemplate>
	
	<Style x:Key="PropertyListStyle" TargetType="ItemsControl">
		<Setter Property="ItemTemplateSelector" Value="{StaticResource EditorTreeSelector}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel VirtualizationMode="Recycling" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="PropertyGroupTemplate">
		<Expander Header="{Binding Key,Mode=OneTime}" Style="{StaticResource TreeExpanderStyle}">
			<ItemsControl Style="{StaticResource PropertyListStyle}" ItemsSource="{Binding}" />
		</Expander>
	</DataTemplate>

	<Style x:Key="PropertySearchTextBox" TargetType="TextBox">
		<Setter Property="Margin" Value="4,1,4,2" />
		<Setter Property="Height" Value="18" />
		<Setter Property="Background" Value="{DynamicResource SearchControlBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource SearchControlBorderBrush}" />
	</Style>

	<ObjectDataProvider x:Key="PaneData" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
		<ObjectDataProvider.MethodParameters>
			<x:Type TypeName="local:EditingPane" />
		</ObjectDataProvider.MethodParameters>
	</ObjectDataProvider>

	<Style TargetType="local:PropertyEditorPanel">
		<Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PanelForegroundBrush}" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:PropertyEditorPanel">
					<Border Name="root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Grid Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>

							<Border  Grid.Row="0" Margin="4,2,4,2" Background="{DynamicResource PanelHeaderBackgroundBrush}" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource PanelGroupSecondaryBorderBrush}">
								<Grid Grid.Row="0" Margin="4,2,4,2">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<Border Visibility="Collapsed" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Height="32" Width="32" Margin="1,6,5,2" Background="{DynamicResource PropertiesPanelIconBackgroundBrush}" VerticalAlignment="Center">
										<!-- type icon -->
									</Border>

									<TextBlock Name="nameLabel" Grid.Row="0" Grid.Column="1" Margin="0,2,0,2" Text="{x:Static prop:Resources.Name}" />
									<local:SubmitTextBox Grid.Row="0" Grid.Column="2" Margin="4,2,0,2" Text="{Binding ObjectName,Mode=TwoWay}" FocusSelectsAll="True" IsReadOnly="{Binding IsObjectNameReadOnly}" Focusable="{Binding IsObjectNameReadOnly,Converter={StaticResource OppositeBoolConverter}}" AutomationProperties.LabeledBy="{Binding ElementName=nameLabel,Mode=OneTime}" />

									<TextBlock Name="typeLabel" Grid.Row="1" Grid.Column="1" Margin="0,4,0,4" Text="{x:Static prop:Resources.Type}" />
									<TextBlock Grid.Row="1" Grid.Column="2" Margin="9,4,0,4" Text="{Binding TypeName}" />

									<local:ChoiceControl x:Name="paneSelector" Grid.Row="0" Grid.Column="3" ItemsSource="{Binding Source={StaticResource PaneData}}" Visibility="{Binding EventsEnabled,Converter={StaticResource BoolToVisibilityConverter}}" />
								</Grid>
							</Border>

							<Grid Name="propertiesPane" Grid.Row="1">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<TextBox Name="search" Grid.Row="0" Style="{StaticResource PropertySearchTextBox}" AutomationProperties.Name="Search" Text="{Binding FilterText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

								<local:MenuButton Grid.Row="1" x:Name="arrangeBy" Header="Arrange by:" Margin="0,0,18,0" Content="{Binding ArrangeMode}">
									<local:MenuButton.Visibility>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsArrangeEnabled">
											<Binding.Converter>
												<BooleanToVisibilityConverter />
											</Binding.Converter>
										</Binding>
									</local:MenuButton.Visibility>
									<local:MenuButton.ContextMenu>
										<ContextMenu ItemsSource="{Binding ArrangeModes,Mode=OneTime}" StaysOpen="True" ItemContainerStyle="{DynamicResource ArrangeMenuItem}" />
									</local:MenuButton.ContextMenu>
								</local:MenuButton>
								<ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Disabled" Focusable="False">
									<ItemsControl Name="propertyItems" Background="{DynamicResource ListBackgroundBrush}" Grid.IsSharedSizeScope="True" Style="{StaticResource PropertyListStyle}" />
								</ScrollViewer>
							</Grid>

							<ScrollViewer Name="eventsPane" Grid.Row="1" Visibility="Collapsed">
								<ItemsControl ItemsSource="{Binding Events}">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="{x:Type vms:EventViewModel}">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="0.4*" />
													<ColumnDefinition Width="0.6*" />
												</Grid.ColumnDefinitions>

												<TextBlock Name="eventName" Grid.Column="0" Margin="16,0,0,0" Text="{Binding Event.Name,Mode=OneWay}" TextTrimming="CharacterEllipsis" />
												<local:SubmitTextBox Grid.Column="1" Margin="4,2,4,2" Padding="2,0,0,0" Text="{Binding MethodName,Mode=TwoWay}" AutomationProperties.LabeledBy="{Binding ElementName=eventName,Mode=OneTime}" />
											</Grid>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>