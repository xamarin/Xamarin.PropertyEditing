<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Xamarin.PropertyEditing.Windows"
                    xmlns:core="clr-namespace:Xamarin.PropertyEditing;assembly=Xamarin.PropertyEditing"
                    xmlns:vms="clr-namespace:Xamarin.PropertyEditing.ViewModels;assembly=Xamarin.PropertyEditing">
	
	<local:EditorPropertySelector x:Key="PropertyEditorSelector" />
	<local:EditorTreeSelector x:Key="EditorTreeSelector">
		<local:EditorTreeSelector.Options>
			<local:EditorTreeSelectorOptions ParentTemplate="{DynamicResource PropertyGroupTemplate}" EditorTemplate="{DynamicResource PropertyEditorTemplate}" />
		</local:EditorTreeSelector.Options>
	</local:EditorTreeSelector>

	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
	<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="19" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						
						<Border Grid.Column="0" Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
							<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
								</Path.RenderTransform>
							</Path>
						</Border>
						
						<ContentPresenter Grid.Column="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
							<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
							<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TreeExpanderStyle" TargetType="Expander">
		<Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{DynamicResource CategoryExpanderBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpandCollapseToggleStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="PropertyEditorTemplate">
		<local:PropertyPresenter Padding="19,0,0,0" Background="{DynamicResource PanelBackgroundBrush}" Label="{Binding Property.Name,Mode=OneTime}" Content="{Binding Mode=OneTime}" ContentTemplateSelector="{StaticResource PropertyEditorSelector}" />
	</DataTemplate>
	
	<Style x:Key="PropertyListStyle" TargetType="ItemsControl">
		<Setter Property="ItemTemplateSelector" Value="{StaticResource EditorTreeSelector}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel VirtualizationMode="Recycling" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="PropertyGroupTemplate">
		<Expander Header="{Binding Key,Mode=OneTime}" Style="{StaticResource TreeExpanderStyle}">
			<ItemsControl Style="{StaticResource PropertyListStyle}" ItemsSource="{Binding}" />
		</Expander>
	</DataTemplate>

	<Style x:Key="PropertySearchTextBox" TargetType="TextBox">
		<Setter Property="Margin" Value="4,1,4,2" />
		<Setter Property="Height" Value="18" />
		<Setter Property="Background" Value="{DynamicResource SearchControlBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource SearchControlBorderBrush}" />
	</Style>

	<Style TargetType="local:PropertyEditorPanel">
		<Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PanelForegroundBrush}" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:PropertyEditorPanel">
					<Border Name="root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Grid Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<TextBox Name="search" Grid.Row="0" Style="{StaticResource PropertySearchTextBox}" AutomationProperties.Name="Search" Text="{Binding FilterText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

							<local:MenuButton Grid.Row="1" x:Name="arrangeBy" Header="Arrange by:" Margin="0,0,18,0" Content="{Binding ArrangeMode}">
								<local:MenuButton.Visibility>
									<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsArrangeEnabled">
										<Binding.Converter>
											<BooleanToVisibilityConverter />
										</Binding.Converter>
									</Binding>
								</local:MenuButton.Visibility>
								<local:MenuButton.ContextMenu>
									<ContextMenu ItemsSource="{Binding ArrangeModes,Mode=OneTime}" StaysOpen="True" ItemContainerStyle="{DynamicResource ArrangeMenuItem}" />
								</local:MenuButton.ContextMenu>
							</local:MenuButton>
							<ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Disabled" Focusable="False">
								<ItemsControl Name="propertyItems" Background="{DynamicResource ListBackgroundBrush}" Grid.IsSharedSizeScope="True" Style="{StaticResource PropertyListStyle}" />
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>