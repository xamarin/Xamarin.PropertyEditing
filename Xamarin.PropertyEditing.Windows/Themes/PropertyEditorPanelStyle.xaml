<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Xamarin.PropertyEditing.Windows"
                    xmlns:core="clr-namespace:Xamarin.PropertyEditing;assembly=Xamarin.PropertyEditing"
                    xmlns:prop="clr-namespace:Xamarin.PropertyEditing.Properties;assembly=Xamarin.PropertyEditing"
                    xmlns:vms="clr-namespace:Xamarin.PropertyEditing.ViewModels;assembly=Xamarin.PropertyEditing">

	<BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<local:OppositeBoolConverter x:Key="OppositeBoolConverter" />
	<local:EditorPropertySelector x:Key="PropertyEditorSelector" />
	<local:EditorTreeSelector x:Key="EditorTreeSelector" EditorTemplateKey="PropertyEditorTemplate" ParentTemplateKey="PropertyGroupTemplate" />
	<local:ArrangeModeLocalizedConverter x:Key="ArrangeLocalizer" />

	<Style x:Key="TreeExpanderStyle" TargetType="Expander">
		<Setter Property="Foreground" Value="{DynamicResource PanelGroupForegroundBrush}" />
		<Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{DynamicResource CategoryExpanderBorderBrush}" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" Margin="1,3,1,3" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{DynamicResource ExpandCollapseToggleStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="PropertyEditorTemplate">
		<local:PropertyPresenter x:Name="presenter" Padding="19,0,0,0" Label="{Binding Property.Name,Mode=OneTime}" Content="{Binding Mode=OneTime}" ContentTemplateSelector="{StaticResource PropertyEditorSelector}" />
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding CanDelve}" Value="True">
				<Setter TargetName="presenter" Property="ItemsSource" Value="{Binding Properties,FallbackValue={x:Null}}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	
	<Style x:Key="PropertyListStyle" TargetType="ItemsControl">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="ItemTemplateSelector" Value="{StaticResource EditorTreeSelector}" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ItemsControl">
					<ScrollViewer Focusable="False" HorizontalScrollBarVisibility="Disabled">
						<ItemsPresenter />
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel IsItemsHost="True" VirtualizationMode="Recycling" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ToggleButton" x:Key="AdvancedPropertiesToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Height" Value="14" />
		<Setter Property="Padding" Value="1.5,1,1.5,1" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource ToggleItemForegroundBrush}" />
		<Setter Property="ToolTip" Value="{x:Static prop:Resources.UncommonPropertiesTooltip}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="ExpanderButtonBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" DockPanel.Dock="Top">
						<Path x:Name="Chevron" Data="M 0,3 L 5,8 L 10,3" Stroke="{TemplateBinding Foreground}" Width="10" Height="10" StrokeThickness="2"
						      HorizontalAlignment="Stretch" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Data" TargetName="Chevron" Value="M 0,8 L 5,3 L 10,8"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource AdvancedExpanderMouseOverBackgroundBrush}" />
				<Setter Property="BorderBrush" Value="{DynamicResource AdvancedExpanderMouseOverBorderBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource AdvancedExpanderMouseOverForegroundBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Expander" x:Key="AdvancedPropertiesExpander">
		<Setter Property="Foreground" Value="{DynamicResource PanelGroupSecondaryForegroundBrush}" />
		<Setter Property="Background" Value="{DynamicResource PanelGroupSecondaryBackgroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Expander">
					<StackPanel Background="{TemplateBinding Background}">
						<ToggleButton
							x:Name="ExpanderButton" DockPanel.Dock="Top" Style="{DynamicResource AdvancedPropertiesToggleButton}" Content="{TemplateBinding Header}" 
							IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
						</ToggleButton>
						<ContentPresenter x:Name="ExpanderContent" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="PropertyGroupTemplate">
		<local:CategoryExpander Header="{Binding Category,Mode=OneTime}" Style="{StaticResource TreeExpanderStyle}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<ItemsControl Grid.Row="0" Style="{StaticResource PropertyListStyle}" ItemsSource="{Binding Editors,Mode=OneTime}">
					<ItemsControl.Template>
						<ControlTemplate>
							<ItemsPresenter />
						</ControlTemplate>
					</ItemsControl.Template>
				</ItemsControl>
				<local:FilterExpander Grid.Row="1" Visibility="{Binding HasUncommonElements,Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource AdvancedPropertiesExpander}" IsExpanded="{Binding UncommonShown,Mode=TwoWay}" AutomationProperties.Name="{x:Static prop:Resources.UncommonPropertiesName}">
					<ItemsControl Grid.Row="0" Style="{StaticResource PropertyListStyle}" ItemsSource="{Binding UncommonEditors,Mode=OneTime}">
						<ItemsControl.Template>
							<ControlTemplate>
								<ItemsPresenter />
							</ControlTemplate>
						</ItemsControl.Template>
					</ItemsControl>
				</local:FilterExpander>
			</Grid>
		</local:CategoryExpander>
	</DataTemplate>

	<Style TargetType="local:PropertyEditorPanel">
		<Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PanelForegroundBrush}" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:PropertyEditorPanel">
					<Border Name="root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Grid Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>

							<Border Grid.Row="0" Margin="4,2,4,2" Background="{DynamicResource PanelHeaderBackgroundBrush}" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource PanelGroupSecondaryBorderBrush}">
								<Grid Margin="4,2,4,2">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Margin="1,6,5,2" Background="{DynamicResource PropertiesPanelIconBackgroundBrush}" VerticalAlignment="Center">
										<Image Name="typeIcon" Height="32" Width="32" Visibility="Collapsed" />
									</Border>

									<TextBlock Visibility="{Binding IsObjectNameable, Converter={StaticResource BoolToVisibilityConverter}}" Name="nameLabel" Grid.Row="0" Grid.Column="1" Margin="0,2,0,2" Text="{x:Static prop:Resources.Name}" />
									<local:TextBoxEx Visibility="{Binding IsObjectNameable, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="0" Grid.Column="2" Margin="4,2,0,2" Text="{Binding ObjectName,Mode=TwoWay}" FocusSelectsAll="True" IsReadOnly="{Binding IsObjectNameReadOnly}" Focusable="{Binding IsObjectNameReadOnly,Converter={StaticResource OppositeBoolConverter}}" AutomationProperties.LabeledBy="{Binding ElementName=nameLabel,Mode=OneTime}" />

									<TextBlock Name="typeLabel" Grid.Row="1" Grid.Column="1" Margin="0,4,0,4" Text="{x:Static prop:Resources.Type}" />
									<TextBlock Grid.Row="1" Grid.Column="2" Margin="9,4,0,4" Text="{Binding TypeName}" />

									<local:ChoiceControl x:Name="paneSelector" AutomationProperties.HelpText="{x:Static prop:Resources.ViewPropertiesOrEvents}" Style="{DynamicResource PanelChoice}" Grid.Row="0" Grid.Column="3" Margin="4,0,0,0" Visibility="{Binding EventsEnabled,Converter={StaticResource BoolToVisibilityConverter}}">
										<local:ChoiceControl.Items>
											<local:ChoiceItem Name="{x:Static prop:Resources.Properties}" Tooltip="{x:Static prop:Resources.PropertiesSelectedElement}" Value="{x:Static local:EditingPane.Properties}" />
											<local:ChoiceItem Name="{x:Static prop:Resources.Events}" Tooltip="{x:Static prop:Resources.EventHandlersSelectedElement}" Value="{x:Static local:EditingPane.Events}" />
										</local:ChoiceControl.Items>
									</local:ChoiceControl>
								</Grid>
							</Border>

							<Grid Name="propertiesPane" Grid.Row="1">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<local:TextBoxEx x:Name="search" Grid.Row="0" Style="{DynamicResource PropertySearchTextBox}" AutomationProperties.Name="{x:Static prop:Resources.SearchProperties}" Text="{Binding FilterText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

								<local:MenuButton Grid.Row="1" x:Name="arrangeBy" Header="{x:Static prop:Resources.ArrangeByLabel}" Margin="0,0,18,0" Content="{Binding ArrangeMode,Converter={StaticResource ArrangeLocalizer}}" AutomationProperties.Name="{Binding ArrangeMode,StringFormat={x:Static prop:Resources.ArrangeByButtonName}}">
									<local:MenuButton.Visibility>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsArrangeEnabled">
											<Binding.Converter>
												<BooleanToVisibilityConverter />
											</Binding.Converter>
										</Binding>
									</local:MenuButton.Visibility>
									<local:MenuButton.ContextMenu>
										<ContextMenu ItemsSource="{Binding ArrangeModes,Mode=OneTime}" StaysOpen="True" ItemContainerStyle="{DynamicResource ArrangeMenuItem}" AutomationProperties.Name="{x:Static prop:Resources.ArrangeByLabel}" />
									</local:MenuButton.ContextMenu>
								</local:MenuButton>
								<ItemsControl Name="propertyItems" Grid.Row="2" Background="{DynamicResource ListBackgroundBrush}" Grid.IsSharedSizeScope="True" Style="{StaticResource PropertyListStyle}" />
							</Grid>

							<ScrollViewer Name="eventsPane" Grid.Row="1" Visibility="Collapsed">
								<ItemsControl ItemsSource="{Binding Events}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="0.4*" />
													<ColumnDefinition Width="0.6*" />
												</Grid.ColumnDefinitions>

												<TextBlock Name="eventName" Grid.Column="0" Margin="16,0,0,0" Text="{Binding Event.Name,Mode=OneWay}" TextTrimming="CharacterEllipsis" />
												<local:TextBoxEx Grid.Column="1" Margin="4,2,4,2" Padding="2,0,0,0" Text="{Binding MethodName,Mode=TwoWay}" AutomationProperties.LabeledBy="{Binding ElementName=eventName,Mode=OneTime}" />
											</Grid>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>