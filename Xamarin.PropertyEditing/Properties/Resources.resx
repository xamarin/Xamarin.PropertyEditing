<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alpha" xml:space="preserve">
    <value>Alpha</value>
    <comment>Alpha textbox help text</comment>
  </data>
  <data name="AlphaInitial" xml:space="preserve">
    <value>A</value>
    <comment>Alpha initial used as alpha textbox label</comment>
  </data>
  <data name="Black" xml:space="preserve">
    <value>Black</value>
    <comment>Black textbox help text</comment>
  </data>
  <data name="BlackInitial" xml:space="preserve">
    <value>K</value>
    <comment>Black initial used as black textbox label</comment>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Blue</value>
    <comment>Blue textbox help text</comment>
  </data>
  <data name="BlueInitial" xml:space="preserve">
    <value>B</value>
    <comment>Blue initial used as blue textbox label</comment>
  </data>
  <data name="Brightness" xml:space="preserve">
    <value>Brightness</value>
    <comment>Brightness textbox help text</comment>
  </data>
  <data name="BrightnessInitial" xml:space="preserve">
    <value>B</value>
    <comment>Brightness initial used as brightness textbox label</comment>
  </data>
  <data name="CMYK" xml:space="preserve">
    <value>CMYK</value>
    <comment>Cyan magenta yellow black menu entry</comment>
  </data>
  <data name="ColorSpace" xml:space="preserve">
    <value>Color space</value>
    <comment>Color space dropdown help text</comment>
  </data>
  <data name="CurrentColor" xml:space="preserve">
    <value>Current color</value>
    <comment>Current color help text</comment>
  </data>
  <data name="Cyan" xml:space="preserve">
    <value>Cyan</value>
    <comment>Cyan textbox help text</comment>
  </data>
  <data name="CyanInitial" xml:space="preserve">
    <value>C</value>
    <comment>Cyan initial used as cyan textbox label</comment>
  </data>
  <data name="CyanMagentaYellowBlack" xml:space="preserve">
    <value>Cyan / Magenta / Yellow / Black</value>
    <comment>CMYK help text</comment>
  </data>
  <data name="ConvertToLocalValue" xml:space="preserve">
    <value>Convert to Local Value</value>
  </data>
  <data name="CustomExpressionEllipsis" xml:space="preserve">
    <value>Custom Expressionâ€¦</value>
  </data>
  <data name="EventHandlersSelectedElement" xml:space="preserve">
    <value>Event handlers for the selected element</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Green</value>
    <comment>Green textbox help text</comment>
  </data>
  <data name="GreenInitial" xml:space="preserve">
    <value>G</value>
    <comment>Green initial used as green textbox label</comment>
  </data>
  <data name="HexValue" xml:space="preserve">
    <value>Hex value</value>
    <comment>Hex value textbox help text</comment>
  </data>
  <data name="HLS" xml:space="preserve">
    <value>HLS</value>
    <comment>Hue lightness saturation menu entry</comment>
  </data>
  <data name="HSB" xml:space="preserve">
    <value>HSB</value>
    <comment>Hue saturation brightness menu entry</comment>
  </data>
  <data name="Hue" xml:space="preserve">
    <value>Hue</value>
    <comment>Hue textbox help text</comment>
  </data>
  <data name="HueInitial" xml:space="preserve">
    <value>H</value>
    <comment>Hue initial used as hue textbox label</comment>
  </data>
  <data name="HueLightnessSaturation" xml:space="preserve">
    <value>Hue / Lightness / Saturation</value>
    <comment>HLS help text</comment>
  </data>
  <data name="HueSaturationBrightness" xml:space="preserve">
    <value>Hue / Saturation / Brightness</value>
    <comment>HSB help text</comment>
  </data>
  <data name="InitialColor" xml:space="preserve">
    <value>Initial color</value>
    <comment>Initial color button help text</comment>
  </data>
  <data name="LastColor" xml:space="preserve">
    <value>Last color</value>
    <comment>Last color help text</comment>
  </data>
  <data name="Lightness" xml:space="preserve">
    <value>Lightness</value>
    <comment>Lightness textbox help text</comment>
  </data>
  <data name="LightnessInitial" xml:space="preserve">
    <value>L</value>
    <comment>Lightness initial used as lightness textbox label</comment>
  </data>
  <data name="Magenta" xml:space="preserve">
    <value>Magenta</value>
    <comment>Magenta textbox help text</comment>
  </data>
  <data name="MagentaInitial" xml:space="preserve">
    <value>M</value>
    <comment>Magenta initial used as magenta textbox label</comment>
  </data>
  <data name="MultipleObjectsSelected" xml:space="preserve">
    <value>{0} objects selected</value>
  </data>
  <data name="MultipleTypesSelected" xml:space="preserve">
    <value>{0} types selected</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoName" xml:space="preserve">
    <value>&lt;No Name&gt;</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="PropertiesSelectedElement" xml:space="preserve">
    <value>Properties for the selected element</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Red</value>
    <comment>Red textbox help text</comment>
  </data>
  <data name="RedGreenBlue" xml:space="preserve">
    <value>Red / Green/ Blue</value>
    <comment>RGB help text</comment>
  </data>
  <data name="RedInitial" xml:space="preserve">
    <value>R</value>
    <comment>Red initial used as red textbox label</comment>
  </data>
  <data name="RGB" xml:space="preserve">
    <value>RGB</value>
    <comment>Red green blue menu entry</comment>
  </data>
  <data name="Saturation" xml:space="preserve">
    <value>Saturation</value>
    <comment>Saturation textbox help text</comment>
  </data>
  <data name="SaturationInitial" xml:space="preserve">
    <value>S</value>
    <comment>Saturation initial used as saturation textbox label</comment>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ViewPropertiesOrEvents" xml:space="preserve">
    <value>View properties or events</value>
    <comment>Properties/Events narrator help text</comment>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Yellow</value>
    <comment>Yellow textbox help text</comment>
  </data>
  <data name="YellowInitial" xml:space="preserve">
    <value>Y</value>
    <comment>Yellow initial used as yellow textbox label</comment>
  </data>
  <data name="NoBrush" xml:space="preserve">
    <value>No brush</value>
    <comment>No brush tab help text</comment>
  </data>
  <data name="SolidBrush" xml:space="preserve">
    <value>Solid color brush</value>
    <comment>Solid color brush help text</comment>
  </data>
  <data name="ResourceBrush" xml:space="preserve">
    <value>Brush from resource</value>
    <comment>Brush from resource help text</comment>
  </data>
  <data name="Opacity" xml:space="preserve">
    <value>Opacity</value>
  </data>
  <data name="ShowAdvancedProperties" xml:space="preserve">
    <value>Show advanced properties</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ShowAllAssemblies" xml:space="preserve">
    <value>_Show all assemblies</value>
  </data>
  <data name="SearchProperties" xml:space="preserve">
    <value>Search properties</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="SearchObjectsTitle" xml:space="preserve">
    <value>Search Objects</value>
  </data>
  <data name="SelectObjectTitle" xml:space="preserve">
    <value>Select Object</value>
  </data>
  <data name="CustomExpression" xml:space="preserve">
    <value>Custom expression</value>
  </data>
  <data name="ColorEditorTabLabel" xml:space="preserve">
    <value>Editor</value>
  </data>
  <data name="SearchResourcesTitle" xml:space="preserve">
    <value>Search Resources</value>
  </data>
  <data name="SelectResourceTitle" xml:space="preserve">
    <value>Select Resource</value>
  </data>
  <data name="ShowSystemResources" xml:space="preserve">
    <value>_Show system resources</value>
  </data>
  <data name="ResourceEllipsis" xml:space="preserve">
    <value>Resourceâ€¦</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Inherited" xml:space="preserve">
    <value>Inherited</value>
  </data>
  <data name="InvalidValue" xml:space="preserve">
    <value>{0} is an Invalid Value</value>
  </data>
  <data name="Local" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="Unset" xml:space="preserve">
    <value>Unset</value>
  </data>
  <data name="MaterialColorRed" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="MaterialColorPink" xml:space="preserve">
    <value>Pink</value>
  </data>
  <data name="MaterialColorPurple" xml:space="preserve">
    <value>Purple</value>
  </data>
  <data name="MaterialColorDeepPurple" xml:space="preserve">
    <value>Deep Purple</value>
  </data>
  <data name="MaterialColorIndigo" xml:space="preserve">
    <value>Indigo</value>
  </data>
  <data name="MaterialColorBlue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="MaterialColorLightBlue" xml:space="preserve">
    <value>Light Blue</value>
  </data>
  <data name="MaterialColorCyan" xml:space="preserve">
    <value>Cyan</value>
  </data>
  <data name="MaterialColorTeal" xml:space="preserve">
    <value>Teal</value>
  </data>
  <data name="MaterialColorGreen" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="MaterialColorLightGreen" xml:space="preserve">
    <value>Light Green</value>
  </data>
  <data name="MaterialColorLime" xml:space="preserve">
    <value>Lime</value>
  </data>
  <data name="MaterialColorYellow" xml:space="preserve">
    <value>Yellow</value>
  </data>
  <data name="MaterialColorAmber" xml:space="preserve">
    <value>Amber</value>
  </data>
  <data name="MaterialColorOrange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="MaterialColorDeepOrange" xml:space="preserve">
    <value>Deep Orange</value>
  </data>
  <data name="MaterialColorBrown" xml:space="preserve">
    <value>Brown</value>
  </data>
  <data name="MaterialColorGrey" xml:space="preserve">
    <value>Grey</value>
  </data>
  <data name="MaterialColorBlueGrey" xml:space="preserve">
    <value>Blue Grey</value>
  </data>
  <data name="MaterialDesignColorBrush" xml:space="preserve">
    <value>Material Design Colors</value>
    <comment>Material design help text</comment>
  </data>
  <data name="MaterialColorBlackAndWhite" xml:space="preserve">
    <value>Black and White</value>
  </data>
  <data name="White" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="NoPreviewAvailable" xml:space="preserve">
    <value>No preview available</value>
    <comment>Resource selector window preview section text</comment>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>Resource</value>
  </data>
  <data name="ResourceWithName" xml:space="preserve">
    <value>Resource ({0})</value>
    <comment>Resource with the raw embedded resource name</comment>
  </data> 
  <data name="Binding" xml:space="preserve">
    <value>Binding</value>
  </data>
  <data name="GoToSource" xml:space="preserve">
    <value>Go to Source</value>
  </data>
  <data name="ImageBrush" xml:space="preserve">
    <value>Image brush</value>
    <comment>Image brush tab help text</comment>
  </data>
  <data name="ImageSource" xml:space="preserve">
    <value>Image source</value>
    <comment>ImageSource label text</comment>
  </data>
  <data name="Stretch" xml:space="preserve">
    <value>Stretch</value>
    <comment>Stretch label text</comment>
  </data>
  <data name="TileMode" xml:space="preserve">
    <value>Tile mode</value>
    <comment>TileMode editor label text</comment>
  </data>
</root>